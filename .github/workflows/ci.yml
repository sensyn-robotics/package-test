on:
  push:
    tags-ignore:
      - '*'
    branches:
      - '**'
jobs:
  code_quality:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '13.11'
          always-auth: true
          registry-url: 'https://npm.pkg.github.com'
          scope: '@sensyn-robotics'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install project dependencies
        run: yarn install -s --no-progress
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build_dummy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      image-digest: ${{ steps.build_push.outputs.digest }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
      - name: Build and Push monitor's image
        id: build_push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/Dockerfile
          push: true
          build-args: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          cache-to: type=inline
